<Having>

가격이 8000원 이상인 도서를 구매한 고객에 대하여 고객별 주문 도서의 총수량을 구하시오.
단 두 권 이상 구매한 고객만 구하시오

SELECT custid, COUNT(*) AS '총수량' FROM Orders WHERE saleprice >=8000 GROUP BY custid HAVING COUNT(*)>=2;
가격이 8000원 이상 = WHERE saleprice >=8000
도서를 구매한 = FROM Order
고객별 = GROUP BY custid
주문 도서의 총 수량 = SELECT custid, COUNT(*) AS '총수량'
단 두 권 이상 구매한 고객만 = HAVING COUNT(*)>=2

<동등 조인> 교집합만 이야기함.

3-21 질의
SELECT * FROM Customer , Orders; 
10 * 5 = 50 모든 조합의 표가 나옴 
공통 속성인 custid를 기준으로 하나 하나 조합해 의미없는 데이터가 도출됨

SELECT * FROM Customer, Orders WHERE Customer.custid =Orders.custid;
10줄의 표가 나옴.
custid를 같게 하므므로써 인물에 따른 의미 있는 데이터가 도출됨

3-22질의

SELECT * FROM Customer, Orders WHERE Customer.custid = Orders.custid ORDER BY Customer.custid;

3-23질의

SELECT name, saleprice FROM Customer, Orders WHERE Customer.custid = Orders.custid;

3-24질의

SELECT name, SUM(saleprice) AS "총 판매액" FROM Customer, Orders WHERE Customer.custid = Orders.custid Group BY Customer.name ORDER BY Customer.name;

3-25질의 

SELECT Customer.name, Book.Bookname FROM Customer, Orders, Book WHERE Customer.custid = Orders.custid AND Book.bookid = Orders.bookid;

3-26질의 

SELECT Customer.name, Book.bookname FROM Customer, Book, Orders WHERE Customer.custid = Orders.custid AND Book.bookid = Orders.bookid AND Book.price = 20000;

<외부 조인> LEFT / RIGHT ==> LEFT + 교집합 / RIGHT + 교집합 

3-27질의

SELECT Customer.name, saleprice FROM Customer LEFT OUTER JOIN Orders
ON Customer.custid = Orders.custid;

<부속 질의 Sub Query>

가장 비싼 도서의 이름은 무엇이며 얼마인가

1-1 가장 비싼책은 얼마인가?
SELECT MAX(price)
FROM book;
35000

1-2 비싼책 이름은 무엇인가?
SELECT Bookname
FROM book
WHERE price = 35000;

(1-1) + (1-2) 
SELECT Bookname FROM book WHERE price =(SELECT MAX(price) FROM book);

3-29질의 

SELECT name FROM Customer WHERE custid IN (select custid FROM Orders);

3-30질의

<집한 연산 - 고객이름의 합집합을 구하고싶다 UNION 문장과 문장을 연결>

3-32질의
SELECT name FROM customer WHERE address LIKE '대한민국%'
UNION
SELECT name FROM Customer WHERE custid IN (SELECT custid FROM Orders);

SELECT name FROM customer WHERE address LIKE '대한민국%'
UNION ALL
SELECT name FROM Customer WHERE custid IN (SELECT custid FROM Orders);
- 중복 허용

<차집합>
SELECT name FROM customer WHERE address LIKE '대한민국%'
AND
Name NOT IN (SELECT name FROM Customer WHERE custid IN (SELECT custid FROM Orders));

<교집합>
SELECT name FROM customer WHERE address LIKE '대한민국%'
AND
Name IN (SELECT name FROM Customer WHERE custid IN (SELECT custid FROM Orders));

P199 연습문제 

(내 답안)

1. 도서번호가 1인 도서의 이름
SELECT bookname FROM book WHERE bookid = 1;

2. 가격이 20,000원 이상인 도서의 이름
SELECT bookname FROM book WHERE price >=20000;

3. 박지성의 총구매액
SELECT name, SUM(saleprice) AS "총 판매액" FROM Customer, Orders WHERE Customer.custid = Orders.custid AND name = "박지성";

4. 박지성의 구매한 도서의 수 
SELECT COUNT(*) FROM Orders WHERE custid = 1;

5. 박지성이 구매한 도서의 출판사 수

6. 박지성이 구매한 도서의 이름, 가격, 정가와 판매가격의 차이 

(선생님 답안)

1. 도서번호가 1인 도서의 이름
SELECT bookname FROM book WHERE bookid = 1;


2. 가격이 20,000원 이상인 도서의 이름
SELECT bookname FROM book WHERE price >=20000;


3. 박지성의 총구매액
SELECT SUM(saleprice) AS '총 구매액'
FROM Customer, Orders
WHERE Customer.custid = Orders.custid AND Customer.name ='박지성';

4. 박지성의 구매한 도서의 수 
SELECT COUNT(*) as '도서수' FROM Customer, Orders
WHERE Customer.custid=Orders.custid
AND Customer.name LIKE '박지성';

5. 박지성이 구매한 도서의 출판사 수
SELECT COUNT(DISTINCT publisher) AS '출판사수'
FROM Customer, Orders, Book
WHERE Customer.custid=Orders.custid AND Orders.bookid=Book.bookid
AND Customer.name ='박지성';


6. 박지성이 구매한 도서의 이름, 가격, 정가와 판매가격의 차이  
SELECT bookname, price, price-saleprice
FROM Customer, Orders, Book
WHERE Customer.custid=Orders.custid AND Orders.bookid=Book.bookid
AND Customer.name ='박지성';

exit